{
  "log": {
    "access": "/var/log/xray/access.log"
  },
  "routing": {
    "rules": [
      {
        "inboundTag": [
          "api"
        ],
        "outboundTag": "api",
        "type": "field"
      },
      {
        "outboundTag": "blocked",
        "protocol": [
          "bittorrent"
        ],
        "type": "field"
      }
    ]
  },
  "dns": null,
  "inbounds": [
    {
       "listen": "127.0.0.1",
       "port": 62789,
       "protocol": "dokodemo-door",
       "settings": {
          "address": "127.0.0.1"
        },
      "streamSettings": null,
      "tag": "api",
      "sniffing": null
    },
    {
      "listen": "PUBLIC_IP",
      "port": VMESSWS_PORT,
      "protocol": "vmess",
      "settings": {
        "clients": [
          {
            "id": "UUID_VMESSWS",
            "flow": "xtls-rprx-direct"
# vmessws
          }
        ],
        "disableInsecureEncryption": false
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "path": "/vmessws",
          "headers": {
            "Host": "DOMAIN_NAME"
          }
        }
      },
      "tag": "inbound-VMESSWS_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "port": VLESS_PORT,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "UUID_VLESS",
            "flow": "xtls-rprx-direct"
# vless
          }
        ],
        "decryption": "none",
        "fallbacks": [
          {
            "dest": 80
          },
          {
            "path": "/trojanwstls",
            "dest": TROJANWSTLS_PORT,
            "xver": 1
          },
          {
            "path": "/vlesswstls",
            "dest": VLESSWSTLS_PORT,
            "xver": 1
          }
        ]
      },
      "streamSettings": {
        "network": "tcp",
        "security": "xtls",
        "xtlsSettings": {
          "serverName": "",
          "alpn": [
              "http/1.1"
           ],
          "certificates": [
            {
              "certificateFile": "/etc/letsencrypt/live/DOMAIN_NAME/fullchain.pem",
              "keyFile": "/etc/letsencrypt/live/DOMAIN_NAME/privkey.pem"
            }
          ]
        }
      },
      "tag": "inbound-VLESS_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1",
      "port": VLESSWSTLS_PORT,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "UUID_VLESSWSTLS",
            "flow": "xtls-rprx-direct"
# vlesswstls
          }
        ],
        "decryption": "none",
        "fallbacks": []
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "acceptProxyProtocol": true,
          "path": "/vlesswstls",
          "headers": {
            "Host": "DOMAIN_NAME"
          }
        }
      },
      "tag": "inbound-VLESSWSTLS_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "PUBLIC_IP",
      "port": VLESSWS_PORT,
      "protocol": "vless",
      "settings": {
        "clients": [
          {
            "id": "UUID_VLESSWS",
            "flow": "xtls-rprx-direct"
# vlessws
          }
        ],
        "decryption": "none",
        "fallbacks": []
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "path": "/vlessws",
          "headers": {
            "Host": "DOMAIN_NAME"
          }
        }
      },
      "tag": "inbound-VLESSWS_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "127.0.0.1",
      "port": TROJANWSTLS_PORT,
      "protocol": "trojan",
      "settings": {
        "clients": [
          {
            "password": "UUID_TROJANWSTLS",
            "flow": "xtls-rprx-direct"
# trojanwstls
          }
        ],
        "fallbacks": []
      },
      "streamSettings": {
        "network": "ws",
        "security": "none",
        "wsSettings": {
          "acceptProxyProtocol": true,
          "path": "/trojanwstls",
          "headers": {
            "Host": "DOMAIN_NAME"
          }
        }
      },
      "tag": "inbound-TROJANWSTLS_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    },
    {
      "listen": "PUBLIC_IP",
      "port": TROJAN_PORT,
      "protocol": "trojan",
      "settings": {
        "clients": [
          {
            "password": "UUID_TROJAN",
            "flow": "xtls-rprx-direct"
# trojan
          }
        ],
        "fallbacks": []
      },
      "streamSettings": {
        "network": "tcp",
        "security": "xtls",
        "xtlsSettings": {
          "serverName": "",
          "alpn": [
              "http/1.1"
           ],
          "certificates": [
            {
              "certificateFile": "/etc/letsencrypt/live/DOMAIN_NAME/fullchain.pem",
              "keyFile": "/etc/letsencrypt/live/DOMAIN_NAME/privkey.pem"
            }
          ]
        },
        "tcpSettings": {
          "header": {
            "type": "none"
          }
        }
      },
      "tag": "inbound-TROJAN_PORT",
      "sniffing": {
        "enabled": true,
        "destOverride": [
          "http",
          "tls"
        ]
      }
    }
  ],
  "outbounds": [
    {
      "protocol": "freedom",
      "settings": {}
    },
    {
      "protocol": "blackhole",
      "settings": {},
      "tag": "blocked"
    }
  ],
  "transport": null,
  "policy": {
    "system": {
      "statsInboundDownlink": true,
      "statsInboundUplink": true
    }
  },
  "api": {
    "services": [
      "HandlerService",
      "LoggerService",
      "StatsService"
    ],
    "tag": "api"
  },
  "stats": {},
  "reverse": null,
  "fakeDns": null
}
